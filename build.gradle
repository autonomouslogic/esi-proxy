plugins {
	id "java"
	id "idea"
	id "jacoco"
	id "io.micronaut.application" version "4.4.2"
	id "io.freefair.lombok" version "8.6"
	id "org.danilopianini.git-sensitive-semantic-versioning-gradle-plugin" version "3.1.7"
	id "com.diffplug.spotless" version "6.25.0"
}

group = "com.autonomouslogic.esiproxy"

ext {
	mainClassName = "com.autonomouslogic.esiproxy.Application"
	micronautVersion = "4.5.1"
}

repositories {
	mavenCentral()
}

java {
	withJavadocJar()
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
	annotationProcessor "io.micronaut.jaxrs:micronaut-jaxrs-processor"
	annotationProcessor "io.micronaut.micrometer:micronaut-micrometer-annotation"
	implementation "io.micronaut.platform:micronaut-parent:$micronautVersion"
	implementation "io.micronaut:micronaut-jackson-databind"
	implementation "io.micronaut:micronaut-management"
	implementation "io.micronaut.jaxrs:micronaut-jaxrs-server"
	implementation "io.reactivex.rxjava3:rxjava:3.1.8"
	implementation "io.micronaut.rxjava3:micronaut-rxjava3"
	implementation "io.micronaut.rxjava3:micronaut-rxjava3-http-client"
	implementation "org.apache.logging.log4j:log4j-api:2.23.1"
	implementation platform("org.apache.logging.log4j:log4j-bom:2.23.1")
	runtimeOnly "org.apache.logging.log4j:log4j-slf4j2-impl:2.23.1"
	compileOnly "io.micronaut:micronaut-http-client"
	runtimeOnly "org.apache.logging.log4j:log4j-core:2.23.1"
	implementation "com.fasterxml.jackson.core:jackson-annotations:2.17.2"
	implementation "com.fasterxml.jackson.core:jackson-core:2.17.2"
	implementation "com.fasterxml.jackson.core:jackson-databind:2.17.2"
	implementation "com.squareup.okhttp3:okhttp:4.12.0"
	implementation "org.yaml:snakeyaml:2.2"

	testAnnotationProcessor "io.micronaut.jaxrs:micronaut-jaxrs-processor"
	testImplementation "org.junit.jupiter:junit-jupiter:5.10.3"
	testImplementation "org.junit.jupiter:junit-jupiter-params:5.10.3"
	testImplementation "org.junit-pioneer:junit-pioneer:2.2.0"
	testImplementation "org.mockito:mockito-junit-jupiter:5.12.0"
	testImplementation "com.squareup.okhttp3:mockwebserver:4.12.0"
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	executionData(test)
	reports {
		xml.required = true
		html.required = true
	}
}

spotless {
	java {
		target "src/**/*.java"
		palantirJavaFormat()
		indentWithTabs()
	}

	groovyGradle {
		indentWithTabs()
	}
}

gitSemVer {
	buildMetadataSeparator.set("-")
}

test {
	environment "LOG_LEVEL", "trace"
	jvmArgs "-client", "-XX:+UseG1GC", "-Xmx8g"

	useJUnitPlatform()
	testLogging {
		events = [ "FAILED", "PASSED", "SKIPPED" ]
		showExceptions = true
		exceptionFormat = "FULL"
		showExceptions = true
		showCauses = true
		showStackTraces = true
	}
	// https://junit-pioneer.org/docs/environment-variables/#warnings-for-reflective-access
	jvmArgs("--add-opens", "java.base/java.util=ALL-UNNAMED", "--add-opens", "java.base/java.lang=ALL-UNNAMED")
}

application {
	mainClass = mainClassName
	applicationDefaultJvmArgs = [
			"-XX:+PrintCommandLineFlags",
			"-XX:MinHeapSize=" + 10 * 1024 * 1024,
			"-XX:MaxRAMPercentage=80.0",
			"-Dorg.jooq.no-logo=true",
			"-Dorg.jooq.no-tips=true"
	]
}

micronaut {
	version "$micronautVersion"
	runtime("netty")
	testRuntime("junit5")
}

wrapper {
	distributionType = "ALL"
}
